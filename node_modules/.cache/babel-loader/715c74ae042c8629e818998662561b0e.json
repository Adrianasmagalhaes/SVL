{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\svl\\\\src\\\\Components\\\\BokTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BookTable() {\n  _s();\n\n  //1-Criar o status que vai conter a lista da api\n  let [comments, setComments] = useState([]); //2 - Criar o objeto colunas, no qual o dataFiel é a propriedade do objeto\n\n  const columns = [{\n    dataField: 'id',\n    text: ' ID'\n  }, {\n    dataField: 'name',\n    text: 'Nome'\n  }, {\n    dataField: 'email',\n    text: 'Email'\n  }, {\n    dataField: 'body',\n    text: 'Texto'\n  }];\n  const Product = [{\n    id: 1,\n    name: 'Livro 1',\n    price: 10\n  }, {\n    id: 2,\n    name: 'Livro 2',\n    price: 50\n  }, {\n    id: 3,\n    name: 'Livro 3',\n    price: 100\n  }];\n\n  const getCommentss = () => {\n    fetch('https://jsonplaceholder.typicode.com/comments').then(Response => Response.json()).then(data => {\n      setComments(data);\n      console.log('comments', data);\n    });\n  };\n\n  useEffect(() => {\n    getComments();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(BootstrapTable, {\n      keyField: \"id\",\n      data: comments,\n      columns: columns,\n      pagination: paginationFactory()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BookTable, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n\n_c = BookTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookTable\");","map":{"version":3,"names":["React","useEffect","useState","BootstrapTable","paginationFactory","BookTable","comments","setComments","columns","dataField","text","Product","id","name","price","getCommentss","fetch","then","Response","json","data","console","log","getComments"],"sources":["C:/git/svl/src/Components/BokTable.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\n\nexport default function BookTable() {\n    //1-Criar o status que vai conter a lista da api\n    let [comments, setComments] = useState([])\n\n//2 - Criar o objeto colunas, no qual o dataFiel é a propriedade do objeto\n    const columns = [{\n        dataField: 'id',\n        text: ' ID'\n    }, {\n        dataField: 'name',\n        text: 'Nome'\n    }, {\n        dataField: 'email',\n        text: 'Email'\n    },{\n        dataField:'body',\n        text:'Texto'\n\n    }];\n\n\n    const Product = [{\n        id: 1,\n        name: 'Livro 1',\n        price: 10\n    },\n    {\n        id: 2,\n        name: 'Livro 2',\n        price: 50\n    },\n    {\n        id: 3,\n        name: 'Livro 3',\n        price: 100\n    }]\n\n    const getCommentss = () => {\n        fetch('https://jsonplaceholder.typicode.com/comments')\n            .then(Response => Response.json())\n            .then(data => {\n                setComments(data)\n                console.log('comments', data)\n            \n            })\n\n    }\n    \n        useEffect(() => {\n        getComments();\n    \n    }, [])\n\n\n    return (\n        <div>\n            <BootstrapTable keyField='id' data={comments} columns={columns}  pagination={ paginationFactory()} />\n            \n        \n        </div>\n    )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;;AAEA,eAAe,SAASC,SAAT,GAAqB;EAAA;;EAChC;EACA,IAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAtC,CAFgC,CAIpC;;EACI,MAAMM,OAAO,GAAG,CAAC;IACbC,SAAS,EAAE,IADE;IAEbC,IAAI,EAAE;EAFO,CAAD,EAGb;IACCD,SAAS,EAAE,MADZ;IAECC,IAAI,EAAE;EAFP,CAHa,EAMb;IACCD,SAAS,EAAE,OADZ;IAECC,IAAI,EAAE;EAFP,CANa,EASd;IACED,SAAS,EAAC,MADZ;IAEEC,IAAI,EAAC;EAFP,CATc,CAAhB;EAgBA,MAAMC,OAAO,GAAG,CAAC;IACbC,EAAE,EAAE,CADS;IAEbC,IAAI,EAAE,SAFO;IAGbC,KAAK,EAAE;EAHM,CAAD,EAKhB;IACIF,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE,SAFV;IAGIC,KAAK,EAAE;EAHX,CALgB,EAUhB;IACIF,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE,SAFV;IAGIC,KAAK,EAAE;EAHX,CAVgB,CAAhB;;EAgBA,MAAMC,YAAY,GAAG,MAAM;IACvBC,KAAK,CAAC,+CAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI;MACVb,WAAW,CAACa,IAAD,CAAX;MACAC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,IAAxB;IAEH,CANL;EAQH,CATD;;EAWInB,SAAS,CAAC,MAAM;IAChBsB,WAAW;EAEd,CAHY,EAGV,EAHU,CAAT;EAMJ,oBACI;IAAA,uBACI,QAAC,cAAD;MAAgB,QAAQ,EAAC,IAAzB;MAA8B,IAAI,EAAEjB,QAApC;MAA8C,OAAO,EAAEE,OAAvD;MAAiE,UAAU,EAAGJ,iBAAiB;IAA/F;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH;;GA7DuBC,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}